esphome:
  name: example_sfd_vosloh
  friendly_name: Example SFD vosloh

esp32:
  board: esp32dev
  framework:
    type: arduino

external_components:
  source: github://chrissileinus/ESPHomeComponent

# Enable logging
logger:

# Enable Home Assistant API
api:
  reboot_timeout: 0s

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "example_sfd_vosloh"

captive_portal:

# Example configuration entry
web_server:
  port: 80

uart: # The SFD Modules ar seting together on uart and only work with this setings.
  - id: uart_bus
    tx_pin: 17
    rx_pin: 16
    baud_rate: 4800
    parity: EVEN
    stop_bits: 2

sfd_vosloh:
  id: sfd
  uart_id: uart_bus
  row_length: 25
  current_content:
    name: current content
  current_c_state:
    name: current char state
  current_m_state:
    name: current motor state
  last_module:
    name: last module
  rolling:
    name: rolling

time:
  - id: my_time
    platform: sntp
    timezone: Europe/Berlin

    on_time:
      - seconds: 0
        minutes: /1
        then:
          - lambda: |-
              std::string text = id(my_time).now().strftime("%d.%m.%Y %H:%M");
              id(sfd).set_content(text, sfd_vosloh::ALIGN_CENTER, 2);
    on_time_sync:
      then:
        - logger.log: "time_sync"
        - lambda: |-
            std::string text = id(my_time).now().strftime("%d.%m.%Y %H:%M");
            id(sfd).set_content(text, sfd_vosloh::ALIGN_CENTER, 2);

select:
  - platform: template
    id: text
    name: "Text"
    optimistic: true
    options:
      - ""
      - "Dieser Text dient zum test der Anzeige.\n Der Zeilenumbruch sollte auch funktionieren."
      - "Dies ist ein Text zum testen der Anzeige. \nDer Zeilenumbruch sollte auch funktionieren."
      - "Dies ist ein Text zum testen der Anzeige; \n Der Zeilenumbruch sollte auch funktionieren."
    on_value:
      then:
        - lambda: |-
            id(sfd).set_content(x, sfd_vosloh::WORD_WRAP | sfd_vosloh::ALIGN_RIGHT);

button:
  - platform: restart
    name: "Restart"

  - platform: template
    name: "go blank"
    on_press:
      - lambda: |-
          id(sfd).clear();

  - platform: template
    name: "roll up"
    on_press:
      - lambda: |-
          id(sfd).roll();

  - platform: template
    id: show_time
    name: "show time"
    on_press:
      - lambda: |-
          std::string text = id(my_time).now().strftime("%d.%m.%Y %H:%M");
          id(sfd).set_content(text, sfd_vosloh::ALIGN_CENTER, 2);
